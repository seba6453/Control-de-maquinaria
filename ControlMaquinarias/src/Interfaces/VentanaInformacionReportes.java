/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 */
package Interfaces;

import Dominio.Grafico2DBarras;
import Dominio.Grafico2Dlineas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sebas
 */
public class VentanaInformacionReportes extends javax.swing.JFrame {
    private Sistema sistema;
    private DefaultTableModel modelo;
    /**
     * Creates new form VentanaInformacionReportes
     */
    public VentanaInformacionReportes(Sistema sistema) {
        initComponents();
        this.sistema = sistema;
        modelo = (DefaultTableModel) tablaReportes.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReportes = new javax.swing.JTable();
        ingresoCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        boxMeses = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        salidaPetrolioMensual = new javax.swing.JTextField();
        salidaTonaladasMensual = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        botonGraficarDisponibilidad = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        salidaCubos = new javax.swing.JTextField();
        botonGraficarPetroleo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reportes Mensuales");

        tablaReportes.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tablaReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Horometro Inicial", "Horometro Final", "Horas Maquina", "Horas Reales Trabajadas", "Horas StanBy", "Horas Panne", "Cantidad Petroleo", "Numero de Vueltas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaReportes);
        if (tablaReportes.getColumnModel().getColumnCount() > 0) {
            tablaReportes.getColumnModel().getColumn(0).setResizable(false);
            tablaReportes.getColumnModel().getColumn(1).setResizable(false);
            tablaReportes.getColumnModel().getColumn(2).setResizable(false);
            tablaReportes.getColumnModel().getColumn(3).setResizable(false);
            tablaReportes.getColumnModel().getColumn(4).setResizable(false);
            tablaReportes.getColumnModel().getColumn(5).setResizable(false);
            tablaReportes.getColumnModel().getColumn(6).setResizable(false);
            tablaReportes.getColumnModel().getColumn(7).setResizable(false);
            tablaReportes.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel1.setText("Codigo de Equipo");

        boxMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jLabel2.setText("Mes");

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        salidaPetrolioMensual.setEditable(false);

        salidaTonaladasMensual.setEditable(false);

        jLabel3.setText("Petroleo mensual");

        jLabel4.setText("Toneladas Menusales");

        botonGraficarDisponibilidad.setText("Graficar disponibilidad mensual");
        botonGraficarDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGraficarDisponibilidadActionPerformed(evt);
            }
        });

        jLabel5.setText("m3 mensuales");

        salidaCubos.setEditable(false);

        botonGraficarPetroleo.setText("Graficar petroleo");
        botonGraficarPetroleo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGraficarPetroleoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ingresoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(boxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(botonBuscar)
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(botonGraficarPetroleo)
                            .addComponent(botonGraficarDisponibilidad))
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(salidaPetrolioMensual, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(salidaTonaladasMensual, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(salidaCubos, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingresoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonBuscar)
                        .addComponent(botonGraficarDisponibilidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salidaPetrolioMensual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salidaTonaladasMensual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salidaCubos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonGraficarPetroleo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        modelo.setRowCount(0);
        try{
            for(int x = 0; x < sistema.obtenerNumeroReporteDeEquipo(ingresoCodigo.getText()); x++){
                String [] fila = sistema.obtenerReporteEquipo(ingresoCodigo.getText(), boxMeses.getSelectedIndex(), x).split(",");
                if(!fila[0].equals("nada")){
                    modelo.addRow(fila);
                }
            }
        }catch(NullPointerException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        if(modelo.getRowCount() > 0){
            calcularPetrolioMenusual();
            calularToneladasMensuales();
            calcularCubosMensuales();
        }
        else{
            salidaPetrolioMensual.setText("");
            salidaTonaladasMensual.setText("");
            salidaCubos.setText("");
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonGraficarDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGraficarDisponibilidadActionPerformed
        // TODO add your handling code here:
        Grafico2Dlineas graficoLineas = new Grafico2Dlineas("Fechas", "Porcentage", "Disponibilidad", "Grafico Disponibilidad");
        for (int x  = 0; x < modelo.getRowCount(); x++){
            graficoLineas.getDataset().setValue(calcularPorcDisponibilidadReal(x),(String) modelo.getColumnName(3), (String) modelo.getValueAt(x, 0));
            graficoLineas.getDataset().setValue(calcularPorchorasTrabajadas(x),(String) modelo.getColumnName(4), (String) modelo.getValueAt(x, 0));
            graficoLineas.getDataset().setValue(calcularPorcHorasPanne(x), (String) modelo.getColumnName(6), (String) modelo.getValueAt(x, 0));
        }
        graficoLineas.getFrame().setVisible(true);
    }//GEN-LAST:event_botonGraficarDisponibilidadActionPerformed

    private void botonGraficarPetroleoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGraficarPetroleoActionPerformed
        // TODO add your handling code here:
        Grafico2DBarras graficaBarras = new Grafico2DBarras("Fechas", "Litros", "Petroleo utilizado", "Grafico Petroleo");
        for(int x = 0; x < modelo.getRowCount(); x++){
            graficaBarras.getDataset().setValue(Double.parseDouble((String) modelo.getValueAt(x, 7)), (String) modelo.getColumnName(7), (String) modelo.getValueAt(x, 0));
        }
        graficaBarras.getFrame().setVisible(true);
    }//GEN-LAST:event_botonGraficarPetroleoActionPerformed
    
    private void calcularPetrolioMenusual(){
        int total = 0;
        for(int x = 0; x < modelo.getRowCount(); x++){
            total += Integer.parseInt((String) modelo.getValueAt(x, 7));
        }
        salidaPetrolioMensual.setText(Integer.toString(total));
    }
    
    private void calcularCubosMensuales(){
        int total = 0;
        if(!((String) modelo.getValueAt(0, 8)).equals("-")){
            for(int x = 0; x < modelo.getRowCount(); x++){
                total += Integer.parseInt((String) modelo.getValueAt(x, 8));
            }
            salidaCubos.setText(Integer.toString(total * 17));
        }
        else{
            salidaCubos.setText("-");
        }
    }
    private void calularToneladasMensuales(){
        int total = 0;
        if(!((String) modelo.getValueAt(0, 8)).equals("-")){
            for(int x = 0; x < modelo.getRowCount(); x++){
                total += Integer.parseInt((String) modelo.getValueAt(x, 8));
            }
            salidaTonaladasMensual.setText(Integer.toString(total * 33));
        }
        else{
            salidaTonaladasMensual.setText("-");
        }
    }
    
    private double calcularPorcDisponibilidadReal(int Row){
        double horaReal = Double.parseDouble((String) modelo.getValueAt(Row, 3));
        return (horaReal / (12 - Double.parseDouble((String) modelo.getValueAt(Row, 6)))) * 100;
    }
    
    private double calcularPorchorasTrabajadas(int Row){
        double horaTrabajada = Double.parseDouble((String) modelo.getValueAt(Row, 4));
        return (horaTrabajada / (12 - Double.parseDouble((String) modelo.getValueAt(Row, 6)))) * 100;
    }
    
    private double calcularPorcHorasPanne(int Row){
        double horasPanne = Double.parseDouble((String) modelo.getValueAt(Row, 6));
        return (horasPanne / 12) * 100;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaInformacionReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaInformacionReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaInformacionReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaInformacionReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonGraficarDisponibilidad;
    private javax.swing.JButton botonGraficarPetroleo;
    private javax.swing.JComboBox<String> boxMeses;
    private javax.swing.JTextField ingresoCodigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField salidaCubos;
    private javax.swing.JTextField salidaPetrolioMensual;
    private javax.swing.JTextField salidaTonaladasMensual;
    private javax.swing.JTable tablaReportes;
    // End of variables declaration//GEN-END:variables
}
